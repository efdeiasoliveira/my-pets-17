#include "tlpp-core.th"

namespace owners

/*/{Protheus.doc} className
    (Manipula os dados)
    @author user
    @since 27/06/2024
    @version version
    /*/
Class OwnersService

    Public Data jResponse as Json

    Public Method new() as Object
    Public Method get() as Json
    Public Method handle() as Json
    Public Method getExpand() as Json

EndClass


/*/{Protheus.doc} new
    (Obtém uma nova instância da classe)
    @author Efdéias Oliveira
    @since 27/06/2024
    @version 1.0
    /*/
Method new() as Object Class OwnersService

    ::jResponse := JsonObject():new()

Return Self



/*/{Protheus.doc} get
    (Retorna os registros)
    @author Efdéias Oliveira
    @since 27/06/2024
    @version 1.0
    @param nPage, numeric, Número da Pagina
    @param nPageSize, numeric, Tamanho da página
    @param aFilter, array, Lista de Filtros a serem realizados
    @param cFields, character, Campos que serão retornados
    @param cSort, character, Ordenação dos campos
	@param aExpand, array, Lista de Expansões solicitadas
    @param cID, character, ID do registro especifico
    @return ::jResponse, json, Json de resposta
    /*/
Method get(nPage as Numeric, nPageSize as Numeric, aFilter as Array, cFields as Character, cSort as Character, aExpand as Array, cID as Character) as Json Class OwnersService

    Local aExpandables as Array
    Local oData        as Object

    Default nPage     := 1
    Default nPageSize := 10
    Default aFilter   := {}
    Default cFields   := ""
    Default cSort     := ""
    Default aExpand   := {}
    Default cID       := ""

    aExpandables := {'pets'}

    oData := OwnersData():new("GET", empty(cID))
    oData:setIsCaseSensitive(.T.)
    oData:get(nPage, nPageSize, aFilter, cFields, cSort, cID)

    If (oData:lOk)
        ::jResponse := oData:gtJsonObjResponse()

        If (! empty(aExpandables))
            utils.rest.u_setExpandables(self, aExpandables, aExpand)
        EndIf
    Else
        ::jResponse := utils.rest.u_setError(oData:getCode(), oData:getMessage())
    EndIf

Return ::jResponse



/*/{Protheus.doc} handle
    (Inclui, Altera e Exclui um registro)
    @author Efdéias Oliveira
    @since 28/06/2024
    @version 1.0
    @param  nOperation, numeric, Operação
    @param  jBody, json, JSon Body
    @param  cId, character, ID do Registro
    @return ::jResponse, json, JSon de Retorno
    /*/
Method handle(nOperation as Numeric, jBody as Json, cId as character) as Json Class OwnersService

    Local oData as Object

    Default nOperation := 0
    Default jBody := JsonObject():new()
    Default cId := ""

    oData := OwnersData():new(If(nOperation == 3, "POST", If(nOperation == 4, "PUT", "DELETE")))
    oData:setIsCaseSensitive(.T.)
    ::jResponse := oData:handleOwners(nOperation, jBody, cId)

    If (! oData:lOk)
        ::jResponse := utils.rest.u_setError(oData:getCode(), oData:getMessage())
    EndIf

Return ::jResponse


/*/{Protheus.doc} getExpand
    (Realiza a consulta da expansão específica para o registro posicionado)
    @type  Static Function
    @author Efdéias Oliveira
    @since 09/07/2024
    @version 1.0
    @param jResponse, json, Response com o registro espeçifico que esta sendo retornado
    @param cExpand, character, Expansão específica que esta sendo requisitada
    @return jExpand, json, Response com o registro que esta sendo retornado
/*/
Method getExpand(jResponse as Json, cExpand as Character, aExpand as Array) as Json Class OwnersService
    
	Local aFilter     as Array
	Local cFields     as Character
	Local cSort       as Character
	Local nPage       as Numeric
	Local nPageSize   as Numeric
    Local oService    as Object

    //--- Exemplo de uma adição de expansão
    nPage     := 1
    nPageSize := 20

    If (cExpand == "pets") 
        aFilter   := {{"FILTER", "ownerId eq " + jResponse[ 'id' ]}}
        cFields   := "id,name,breed,sexo"
        cSort     := "name"
        oService  := pets.PetsService():new()
        jExpand := oService:get(nPage, nPageSize, aFilter, cFields, cSort, aExpand)
    EndIf

	fwFreeArray(aFilter)

Return jExpand['items']
