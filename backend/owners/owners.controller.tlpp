#include "tlpp-core.th"

namespace owners

/*/{Protheus.doc} OwnersController
    (API para Consultar, Incluir, Alterar e Excluir)
    @author Efdéias Oliveira
    @since 27/06/2024
    @version 1.0
    /*/
Class OwnersController

    Data jResponse as Json
    Data oService  as Object

    Public Method new() as Object

    @Get('/api/v1/owners')
    Public Method get() as Logical

    @Get('/api/v1/owners/:id')
    Public Method getById() as Logical

    @Post('/api/v1/owners')
    Public Method post() as Logical

    @Put('/api/v1/owners/:id')
    Public Method put() as Logical

    @Delete('/api/v1/owners/:id')
    Public Method delete() as Logical

EndClass


/*/{Protheus.doc} new
    (Obtem uma nova instância da classe)
    @author Efdéias Oliveira
    @since 27/06/2024
    @version 1.0
    @return self, object, instância da classe
    /*/
Method new() as Object Class OwnersController

    ::oService := OwnersService():new()
    ::jResponse := JsonObject():new()

Return self



/*/{Protheus.doc} get
	(Retorna todos os registros)
	@author Efdéias Oliveira
	@since 29/06/2024
	@version 1.0
	@return .T., logical, Verdadeiro
	/*/
Method get() as Logical Class OwnersController

	Local aExpand   as Array
	Local aFilter   as Array
	Local cFields   as Character
	Local cSort     as Character
	Local nPage     as Numeric
	Local nPageSize as Numeric

	nPage     := 1
	nPageSize := 10
	aFilter   := {}
	cFields   := ""
	cSort     := ""
	aExpand   := {}

	getQueryParam(@nPage, @nPageSize, @aFilter, @cFields, @cSort, @aExpand)

	::jResponse := ::oService:get(nPage, nPageSize, aFilter, cFields, cSort, aExpand)

	utils.rest.u_setResponse(::jResponse)

	fwFreeArray(aFilter)

Return .T.



/*/{Protheus.doc} getById
	(Método responsável por consultar um item especifico pelo seu id)
	@author Efdéias Oliveira
	@since 28/06/2024
	@version 1.0
	@return .T., logical, Verdadeiro
	/*/
Method getById() as Logical Class OwnersController

	Local aExpand   as Array
	Local aFilter   as Array
	Local cFields   as Character
	Local cId       as Character
	Local cSort     as Character
	Local nPage     as Numeric
	Local nPageSize as Numeric

	nPage     := 1
	nPageSize := 10
	aFilter   := {}
	cFields   := ""
	cSort     := ""
	aExpand   := {}

  	getQueryParam(@nPage, @nPageSize, @aFilter, @cFields, @cSort, @aExpand)

	cId := oRest:getPathParamsRequest()['id']

	::jResponse := ::oService:get(nPage, nPageSize, aFilter, cFields, cSort, aExpand, cId)

	utils.rest.u_setResponse(::jResponse)

	fwFreeArray(aFilter)

Return .T.



/*/{Protheus.doc} post
	(Inclui um registro)
	@author Efdéias Oliveira
	@since 28/06/2024
	@version 1.0
	/*/
Method post() as Logical Class OwnersController

	Local cBody as Character
	Local jBody as Json

	cBody := oRest:getBodyRequest()
	jBody := JsonObject():new()

	If (jBody:fromJson(cBody)) == Nil
		::jResponse := ::oService:handle(3, jBody)
	Else
		::jResponse := utils.rest.u_setError(400, "Json inválido")
	EndIf

	utils.rest.u_setResponse(::jResponse)

Return .T.



/*/{Protheus.doc} put
	(Altera um registro)
	@author Efdéias Oliveira
	@since 29/06/2024
	@version 1.0
	/*/
Method put() as Logical Class OwnersController

	Local cId   as character
	Local cBody as Character
	Local jBody as Json

	cId   := oRest:getPathParamsRequest()['id']
	cBody := oRest:getBodyRequest()
	jBody := JsonObject():new()

	If (jBody:fromJson(cBody)) == Nil
		::jResponse := ::oService:handle(4, jBody, cId)
	Else
		::jResponse := utils.rest.u_setError(400, "Json inválido")
	EndIf

	utils.rest.u_setResponse(::jResponse)

Return .T.



/*/{Protheus.doc} delete
	(Exclui um registro)
	@author Efdéias Oliveira
	@since 29/06/2024
	@version 1.0
	/*/
Method delete() as Logical Class OwnersController

	Local cId   as character

	cId   := oRest:getPathParamsRequest()['id']
	::jResponse := ::oService:handle(5,, cId)

	utils.rest.u_setResponse(::jResponse)

Return .T.




/*/{Protheus.doc} getQueryParam
    (Função responsável por verificar os retornos dos parâmetros)
    @type  Static Function
    @author Efdéias Oliveira
    @since 27/06/2024
    @version 1.0
    @param nPage, numeric, Número da Pagina
    @param nPageSize, numeric, Tamanho da página
    @param aFilter, array, Lista de Filtros a serem realizados
    @param cFields, character, Campos que serão retornados
    @param cSort, character, Ordenação dos campos
	@param aExpand, array, Lista de Expansões solicitadas
/*/
Static Function getQueryParam(nPage as Numeric, nPageSize as Numeric, aFilter as Array, cFields as Character, cSort as Character, aExpand as Array)

	Local oQueryRequest as Object

	oQueryRequest := oRest:getQueryRequest()

	If (oQueryRequest:getJsonText('page') != 'null')
		nPage := val(oQueryRequest:getJsonText('page'))
	EndIf

	If (oQueryRequest:getJsonText('pageSize') != 'null')
		nPageSize := val(oQueryRequest:getJsonText('pageSize'))
	EndIf

	If (oQueryRequest:getJsonText('fields') != 'null')
		cFields := oQueryRequest:getJsonText('fields')
	EndIf

	If (oQueryRequest:getJsonText('sort') != 'null')
		cSort := oQueryRequest:getJsonText('sort')
	EndIf

	if (oQueryRequest:getJsonText('expand') != 'null')
		aExpand := separa(oQueryRequest:getJsonText('expand'), ',')
	endif

	If (oQueryRequest:getJsonText('filter') != 'null')
		aAdd(aFilter, { 'FILTER', oQueryRequest:getJsonText('filter')})
	EndIf

	If (oQueryRequest:getJsonText('name') != 'null')
		aAdd(aFilter, { 'name', oQueryRequest:getJsonText('name')})
	EndIf

	If (oQueryRequest:getJsonText('rg') != 'null')
		aAdd(aFilter, { 'rg', oQueryRequest:getJsonText('rg')})
	EndIf

	If (oQueryRequest:getJsonText('cpf') != 'null')
		aAdd(aFilter, { 'cpf', oQueryRequest:getJsonText('cpf')})
	EndIf

	If (oQueryRequest:getJsonText('email') != 'null')
		aAdd(aFilter, { 'email', oQueryRequest:getJsonText('email')})
	EndIf

	If (oQueryRequest:getJsonText('tel1') != 'null')
		aAdd(aFilter, { 'tel1', oQueryRequest:getJsonText('tel1')})
	EndIf

	If (oQueryRequest:getJsonText('tel2') != 'null')
		aAdd(aFilter, { 'tel2', oQueryRequest:getJsonText('tel2')})
	EndIf

Return Nil

